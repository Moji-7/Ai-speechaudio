{
    "sourceFile": "src/components/GetText.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 134,
            "patches": [
                {
                    "date": 1706600584208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1706600763241,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,9 @@\n import React from 'react'\r\n+import { useGetText } from './hooks/useGetText'\r\n \r\n function GetText() {\r\n+    const {ata, error, isLoading, isError }=useGetText('text')\r\n   return (\r\n     <>GetText</>\r\n   )\r\n }\r\n"
                },
                {
                    "date": 1706600772670,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React from 'react'\r\n import { useGetText } from './hooks/useGetText'\r\n \r\n function GetText() {\r\n-    const {ata, error, isLoading, isError }=useGetText('text')\r\n+    const {data, error, isLoading, isError }=useGetText('text')\r\n   return (\r\n     <>GetText</>\r\n   )\r\n }\r\n"
                },
                {
                    "date": 1706601056961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,20 @@\n import React from 'react'\r\n import { useGetText } from './hooks/useGetText'\r\n \r\n function GetText() {\r\n-    const {data, error, isLoading, isError }=useGetText('text')\r\n-  return (\r\n-    <>GetText</>\r\n-  )\r\n+    const { data, error, isLoading, isError } = useGetText('text')\r\n+    return (\r\n+\r\n+        <>\r\n+            {isLoading && <div >Loading...</div>}\r\n+            {isError && <div >Error: {error.message}</div>}\r\n+            GetText\r\n+\r\n+        </>\r\n+\r\n+\r\n+\r\n+    )\r\n }\r\n \r\n export default GetText\n\\ No newline at end of file\n"
                },
                {
                    "date": 1706601068053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n     return (\r\n \r\n         <>\r\n             {isLoading && <div >Loading...</div>}\r\n-            {isError && <div >Error: {error.message}</div>}\r\n+            {isError && <div >Error: {error?.message}</div>}\r\n             GetText\r\n \r\n         </>\r\n \r\n"
                },
                {
                    "date": 1706601166176,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,16 @@\n         <>\r\n             {isLoading && <div >Loading...</div>}\r\n             {isError && <div >Error: {error?.message}</div>}\r\n             GetText\r\n+            {data && (\r\n+                {\r\n+                    data.map((item, index) => (\r\n+                        <>\r\n+                        </>\r\n+                    ))\r\n+                }\r\n+            )}\r\n \r\n         </>\r\n \r\n \r\n"
                },
                {
                    "date": 1706601215701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,24 @@\n-import React from 'react'\r\n-import { useGetText } from './hooks/useGetText'\r\n+import React from 'react';\r\n+import useGetText from 'your-useGetText-path'; // Import the useGetText hook from its correct path\r\n \r\n function GetText() {\r\n-    const { data, error, isLoading, isError } = useGetText('text')\r\n-    return (\r\n+    const { data, error, isLoading, isError } = useGetText('text');\r\n \r\n-        <>\r\n-            {isLoading && <div >Loading...</div>}\r\n-            {isError && <div >Error: {error?.message}</div>}\r\n-            GetText\r\n-            {data && (\r\n-                {\r\n-                    data.map((item, index) => (\r\n-                        <>\r\n-                        </>\r\n-                    ))\r\n-                }\r\n-            )}\r\n+    if (isLoading) {\r\n+        return <div>Loading...</div>;\r\n+    }\r\n \r\n-        </>\r\n+    if (isError) {\r\n\\ No newline at end of file\n+        return <div>Error: {error?.message}</div>;\r\n+    }\r\n \r\n-\r\n-\r\n-    )\r\n+    return (\r\n+        <div>\r\n+            {data && data.map((item, index) => (\r\n+                <div key={index}>{item}</div>\r\n+            ))}\r\n+        </div>\r\n+    );\r\n }\r\n \r\n-export default GetText\n+export default GetText;\r\n"
                },
                {
                    "date": 1706601234105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,12 +13,12 @@\n     }\r\n \r\n     return (\r\n         <div>\r\n-            {data && data.map((item, index) => (\r\n+            {data && data.map((item, index:number) => (\r\n                 <div key={index}>{item}</div>\r\n             ))}\r\n         </div>\r\n     );\r\n }\r\n \r\n\\ No newline at end of file\n-export default GetText;\n+export default GetText;\r\n"
                },
                {
                    "date": 1706601241643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,12 +13,12 @@\n     }\r\n \r\n     return (\r\n         <div>\r\n-            {data && data.map((item, index:number) => (\r\n+            {data && data.map((item:any, index:number) => (\r\n                 <div key={index}>{item}</div>\r\n             ))}\r\n         </div>\r\n     );\r\n }\r\n \r\n\\ No newline at end of file\n-export default GetText;\n+export default GetText;\r\n"
                },
                {
                    "date": 1706601257976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React from 'react';\r\n-import useGetText from 'your-useGetText-path'; // Import the useGetText hook from its correct path\r\n+import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n     const { data, error, isLoading, isError } = useGetText('text');\r\n \r\n@@ -20,5 +20,5 @@\n         </div>\r\n     );\r\n }\r\n \r\n-export default GetText;\n\\ No newline at end of file\n+export default GetText;\r\n"
                },
                {
                    "date": 1706601290824,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \r\n     return (\r\n         <div>\r\n             {data && data.map((item:any, index:number) => (\r\n-                <div key={index}>{item}</div>\r\n+                <div key={index}>{item.title_fa}</div>\r\n             ))}\r\n         </div>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1706602659249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n \r\n     return (\r\n         <div>\r\n             {data && data.map((item:any, index:number) => (\r\n-                <div key={index}>{item.title_fa}</div>\r\n+                <div key={index}>{item.title_en}</div>\r\n             ))}\r\n         </div>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1706618213584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,13 +11,20 @@\n     if (isError) {\r\n         return <div>Error: {error?.message}</div>;\r\n     }\r\n \r\n+    function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n+        throw new Error('Function not implemented.');\r\n+    }\r\n+\r\n     return (\r\n         <div>\r\n             {data && data.map((item:any, index:number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n+            <div>\r\n+                <button onClick={(e)=>handleLoadmore(e)}>load more</button>\r\n+            </div>\r\n         </div>\r\n     );\r\n }\r\n \r\n"
                },
                {
                    "date": 1706618719933,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,11 @@\n-import React from 'react';\r\n+import React, { useEffect, useState } from 'react';\r\n import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n-    const { data, error, isLoading, isError } = useGetText('text');\r\n+    const [page, setPage] = useState(1); // state variable for page number\r\n+    const { data: newData, error, isLoading, isError } = useGetText('text', page); // use page as a parameter and a dependency for useGetText\r\n+    const [textData, setTextData] = useState([]); // state variable for text data\r\n \r\n     if (isLoading) {\r\n         return <div>Loading...</div>;\r\n     }\r\n@@ -12,14 +14,21 @@\n         return <div>Error: {error?.message}</div>;\r\n     }\r\n \r\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n-        throw new Error('Function not implemented.');\r\n+        setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n+    // use useEffect to update textData when newData changes\r\n+    useEffect(() => {\r\n+        if (newData) {\r\n+            setTextData(prevData => [...prevData, ...newData]); // append newData to textData\r\n+        }\r\n+    }, [newData]);\r\n+\r\n     return (\r\n         <div>\r\n-            {data && data.map((item:any, index:number) => (\r\n+            {textData && textData.map((item:any, index:number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n             <div>\r\n                 <button onClick={(e)=>handleLoadmore(e)}>load more</button>\r\n"
                },
                {
                    "date": 1706618922326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1); // state variable for page number\r\n-    const { data: newData, error, isLoading, isError } = useGetText('text', page); // use page as a parameter and a dependency for useGetText\r\n+    const { data: newData, error, isLoading, isError } =useGetText(`text,${page}`);    // use page as a parameter and a dependency for useGetText\r\n     const [textData, setTextData] = useState([]); // state variable for text data\r\n \r\n     if (isLoading) {\r\n         return <div>Loading...</div>;\r\n@@ -20,9 +20,9 @@\n \r\n     // use useEffect to update textData when newData changes\r\n     useEffect(() => {\r\n         if (newData) {\r\n-            setTextData(prevData => [...prevData, ...newData]); // append newData to textData\r\n+            setTextData(prevData: => [...prevData:any, ...newData]); // append newData to textData\r\n         }\r\n     }, [newData]);\r\n \r\n     return (\r\n"
                },
                {
                    "date": 1706618979050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,10 +2,11 @@\n import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1); // state variable for page number\r\n-    const { data: newData, error, isLoading, isError } =useGetText(`text,${page}`);    // use page as a parameter and a dependency for useGetText\r\n-    const [textData, setTextData] = useState([]); // state variable for text data\r\n+   \r\n+    const { data: newData, error, isLoading, isError } = useGetText(`text,${page}`) as {data: any[], error: any, isLoading: boolean, isError: boolean}; // use type assertion for useGetText result\r\n+    const [textData, setTextData] = useState<any[]>([]); // state variable for text data \r\n \r\n     if (isLoading) {\r\n         return <div>Loading...</div>;\r\n     }\r\n"
                },
                {
                    "date": 1706619010749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n \r\n     // use useEffect to update textData when newData changes\r\n     useEffect(() => {\r\n         if (newData) {\r\n-            setTextData(prevData: => [...prevData:any, ...newData]); // append newData to textData\r\n+            setTextData(prevData => [...prevData, ...newData]); // append newData to textData\r\n         }\r\n     }, [newData]);\r\n \r\n     return (\r\n"
                },
                {
                    "date": 1706619141811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,11 +20,11 @@\n     }\r\n \r\n     // use useEffect to update textData when newData changes\r\n     useEffect(() => {\r\n-        if (newData) {\r\n+       // if (newData) {\r\n             setTextData(prevData => [...prevData, ...newData]); // append newData to textData\r\n-        }\r\n+       // }\r\n     }, [newData]);\r\n \r\n     return (\r\n         <div>\r\n"
                },
                {
                    "date": 1706619194124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,13 +19,13 @@\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n     // use useEffect to update textData when newData changes\r\n-    useEffect(() => {\r\n-       // if (newData) {\r\n-            setTextData(prevData => [...prevData, ...newData]); // append newData to textData\r\n-       // }\r\n-    }, [newData]);\r\n+    // useEffect(() => {\r\n+    //    // if (newData) {\r\n+    //         setTextData(prevData => [...prevData, ...newData]); // append newData to textData\r\n+    //    // }\r\n+    // }, [newData]);\r\n \r\n     return (\r\n         <div>\r\n             {textData && textData.map((item:any, index:number) => (\r\n"
                },
                {
                    "date": 1706619249705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,13 +19,11 @@\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n     // use useEffect to update textData when newData changes\r\n-    // useEffect(() => {\r\n-    //    // if (newData) {\r\n-    //         setTextData(prevData => [...prevData, ...newData]); // append newData to textData\r\n-    //    // }\r\n-    // }, [newData]);\r\n+    useEffect(() => {\r\n+            setTextData(prevData => [...prevData, ...newData]); // append newData to textData\r\n+    }, [newData]);\r\n \r\n     return (\r\n         <div>\r\n             {textData && textData.map((item:any, index:number) => (\r\n"
                },
                {
                    "date": 1706676696819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,11 +3,12 @@\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1); // state variable for page number\r\n    \r\n-    const { data: newData, error, isLoading, isError } = useGetText(`text,${page}`) as {data: any[], error: any, isLoading: boolean, isError: boolean}; // use type assertion for useGetText result\r\n+    const { data, error, isLoading, isError } = useGetText(`text,${page}`) as {data: any[], error: any, isLoading: boolean, isError: boolean}; // use type assertion for useGetText result\r\n     const [textData, setTextData] = useState<any[]>([]); // state variable for text data \r\n \r\n+\r\n     if (isLoading) {\r\n         return <div>Loading...</div>;\r\n     }\r\n \r\n@@ -18,16 +19,15 @@\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n-    // use useEffect to update textData when newData changes\r\n-    useEffect(() => {\r\n-            setTextData(prevData => [...prevData, ...newData]); // append newData to textData\r\n-    }, [newData]);\r\n+  useEffect (() => {\r\n \r\n+  },[page])\r\n+\r\n     return (\r\n         <div>\r\n-            {textData && textData.map((item:any, index:number) => (\r\n+            {data && data.map((item:any, index:number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n             <div>\r\n                 <button onClick={(e)=>handleLoadmore(e)}>load more</button>\r\n"
                },
                {
                    "date": 1706676714517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,11 +19,11 @@\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n-  useEffect (() => {\r\n+//   useEffect (() => {\r\n \r\n-  },[page])\r\n+//   },[page])\r\n \r\n     return (\r\n         <div>\r\n             {data && data.map((item:any, index:number) => (\r\n"
                },
                {
                    "date": 1706676751431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,11 +4,10 @@\n function GetText() {\r\n     const [page, setPage] = useState(1); // state variable for page number\r\n    \r\n     const { data, error, isLoading, isError } = useGetText(`text,${page}`) as {data: any[], error: any, isLoading: boolean, isError: boolean}; // use type assertion for useGetText result\r\n-    const [textData, setTextData] = useState<any[]>([]); // state variable for text data \r\n+   \r\n \r\n-\r\n     if (isLoading) {\r\n         return <div>Loading...</div>;\r\n     }\r\n \r\n"
                },
                {
                    "date": 1706676763551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,10 +4,11 @@\n function GetText() {\r\n     const [page, setPage] = useState(1); // state variable for page number\r\n    \r\n     const { data, error, isLoading, isError } = useGetText(`text,${page}`) as {data: any[], error: any, isLoading: boolean, isError: boolean}; // use type assertion for useGetText result\r\n-   \r\n+    const [textData, setTextData] = useState<any[]>([]); // state variable for text data \r\n \r\n+\r\n     if (isLoading) {\r\n         return <div>Loading...</div>;\r\n     }\r\n \r\n@@ -18,11 +19,11 @@\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n-//   useEffect (() => {\r\n+  useEffect (() => {\r\n \r\n-//   },[page])\r\n+  },[page])\r\n \r\n     return (\r\n         <div>\r\n             {data && data.map((item:any, index:number) => (\r\n"
                },
                {
                    "date": 1706676853449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,13 +2,11 @@\n import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1); // state variable for page number\r\n-   \r\n-    const { data, error, isLoading, isError } = useGetText(`text,${page}`) as {data: any[], error: any, isLoading: boolean, isError: boolean}; // use type assertion for useGetText result\r\n+    const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n     const [textData, setTextData] = useState<any[]>([]); // state variable for text data \r\n \r\n-\r\n     if (isLoading) {\r\n         return <div>Loading...</div>;\r\n     }\r\n \r\n@@ -19,19 +17,19 @@\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n-  useEffect (() => {\r\n+    useEffect(() => {\r\n+        // Add any side effect code here\r\n+    }, [page]);\r\n \r\n-  },[page])\r\n-\r\n     return (\r\n         <div>\r\n-            {data && data.map((item:any, index:number) => (\r\n+            {data && data.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n             <div>\r\n-                <button onClick={(e)=>handleLoadmore(e)}>load more</button>\r\n+                <button onClick={(e) => handleLoadmore(e)}>load more</button>\r\n             </div>\r\n         </div>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1706676883973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n     useEffect(() => {\r\n+        console.log(page)\r\n         // Add any side effect code here\r\n     }, [page]);\r\n \r\n     return (\r\n"
                },
                {
                    "date": 1706676910717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,12 +17,12 @@\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n-    useEffect(() => {\r\n-        console.log(page)\r\n-        // Add any side effect code here\r\n-    }, [page]);\r\n+    // useEffect(() => {\r\n+    //     console.log(page)\r\n+    //     // Add any side effect code here\r\n+    // }, [page]);\r\n \r\n     return (\r\n         <div>\r\n             {data && data.map((item: any, index: number) => (\r\n"
                },
                {
                    "date": 1706677081868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,12 +17,12 @@\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n-    // useEffect(() => {\r\n-    //     console.log(page)\r\n-    //     // Add any side effect code here\r\n-    // }, [page]);\r\n+    useEffect(() => {\r\n+        console.log(page)\r\n+        // Add any side effect code here\r\n+    }, [1]);\r\n \r\n     return (\r\n         <div>\r\n             {data && data.map((item: any, index: number) => (\r\n"
                },
                {
                    "date": 1706677093489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n \r\n     useEffect(() => {\r\n         console.log(page)\r\n         // Add any side effect code here\r\n-    }, [1]);\r\n+    }, [page]);\r\n \r\n     return (\r\n         <div>\r\n             {data && data.map((item: any, index: number) => (\r\n"
                },
                {
                    "date": 1706677414801,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,15 +5,15 @@\n     const [page, setPage] = useState(1); // state variable for page number\r\n     const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n     const [textData, setTextData] = useState<any[]>([]); // state variable for text data \r\n \r\n-    if (isLoading) {\r\n-        return <div>Loading...</div>;\r\n-    }\r\n+    // if (isLoading) {\r\n+    //     return <div>Loading...</div>;\r\n+    // }\r\n \r\n-    if (isError) {\r\n-        return <div>Error: {error?.message}</div>;\r\n-    }\r\n+    // if (isError) {\r\n+    //     return <div>Error: {error?.message}</div>;\r\n+    // }\r\n \r\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n"
                },
                {
                    "date": 1706677420050,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,11 @@\n import React, { useEffect, useState } from 'react';\r\n import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n-    const [page, setPage] = useState(1); // state variable for page number\r\n-    const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n-    const [textData, setTextData] = useState<any[]>([]); // state variable for text data \r\n+    // const [page, setPage] = useState(1); // state variable for page number\r\n+    // const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n+    // const [textData, setTextData] = useState<any[]>([]); // state variable for text data \r\n \r\n     // if (isLoading) {\r\n     //     return <div>Loading...</div>;\r\n     // }\r\n"
                },
                {
                    "date": 1706677432678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,16 +13,16 @@\n     // if (isError) {\r\n     //     return <div>Error: {error?.message}</div>;\r\n     // }\r\n \r\n-    function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n-        setPage(prevPage => prevPage + 1); // increment page number\r\n-    }\r\n+    // function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n+    //     setPage(prevPage => prevPage + 1); // increment page number\r\n+    // }\r\n \r\n     useEffect(() => {\r\n-        console.log(page)\r\n+        console.log(\"page\")\r\n         // Add any side effect code here\r\n-    }, [page]);\r\n+    }, []);\r\n \r\n     return (\r\n         <div>\r\n             {data && data.map((item: any, index: number) => (\r\n"
                },
                {
                    "date": 1706677818443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,11 +24,11 @@\n     }, []);\r\n \r\n     return (\r\n         <div>\r\n-            {data && data.map((item: any, index: number) => (\r\n+            {/* {data && data.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n-            ))}\r\n+            ))} */}\r\n             <div>\r\n                 <button onClick={(e) => handleLoadmore(e)}>load more</button>\r\n             </div>\r\n         </div>\r\n"
                },
                {
                    "date": 1706677828478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import React, { useEffect, useState } from 'react';\r\n import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n-    // const [page, setPage] = useState(1); // state variable for page number\r\n+    const [page, setPage] = useState(1); // state variable for page number\r\n     // const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n     // const [textData, setTextData] = useState<any[]>([]); // state variable for text data \r\n \r\n     // if (isLoading) {\r\n@@ -13,11 +13,11 @@\n     // if (isError) {\r\n     //     return <div>Error: {error?.message}</div>;\r\n     // }\r\n \r\n-    // function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n-    //     setPage(prevPage => prevPage + 1); // increment page number\r\n-    // }\r\n+    function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n+        setPage(prevPage => prevPage + 1); // increment page number\r\n+    }\r\n \r\n     useEffect(() => {\r\n         console.log(\"page\")\r\n         // Add any side effect code here\r\n"
                },
                {
                    "date": 1706677836545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,15 +5,15 @@\n     const [page, setPage] = useState(1); // state variable for page number\r\n     // const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n     // const [textData, setTextData] = useState<any[]>([]); // state variable for text data \r\n \r\n-    // if (isLoading) {\r\n-    //     return <div>Loading...</div>;\r\n-    // }\r\n+    if (isLoading) {\r\n+        return <div>Loading...</div>;\r\n+    }\r\n \r\n-    // if (isError) {\r\n-    //     return <div>Error: {error?.message}</div>;\r\n-    // }\r\n+    if (isError) {\r\n+        return <div>Error: {error?.message}</div>;\r\n+    }\r\n \r\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n"
                },
                {
                    "date": 1706677846113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,13 +5,13 @@\n     const [page, setPage] = useState(1); // state variable for page number\r\n     // const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n     // const [textData, setTextData] = useState<any[]>([]); // state variable for text data \r\n \r\n-    if (isLoading) {\r\n+    if (2==3) {\r\n         return <div>Loading...</div>;\r\n     }\r\n \r\n-    if (isError) {\r\n+    if (3==4) {\r\n         return <div>Error: {error?.message}</div>;\r\n     }\r\n \r\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n"
                },
                {
                    "date": 1706677861548,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,18 +2,18 @@\n import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1); // state variable for page number\r\n-    // const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n+     const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n     // const [textData, setTextData] = useState<any[]>([]); // state variable for text data \r\n \r\n-    if (2==3) {\r\n-        return <div>Loading...</div>;\r\n-    }\r\n+    // if (isLoading) {\r\n+    //     return <div>Loading...</div>;\r\n+    // }\r\n \r\n-    if (3==4) {\r\n-        return <div>Error: {error?.message}</div>;\r\n-    }\r\n+    // if (isError) {\r\n+    //     return <div>Error: {error?.message}</div>;\r\n+    // }\r\n \r\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n@@ -24,11 +24,11 @@\n     }, []);\r\n \r\n     return (\r\n         <div>\r\n-            {/* {data && data.map((item: any, index: number) => (\r\n+            {data && data.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n-            ))} */}\r\n+            ))}\r\n             <div>\r\n                 <button onClick={(e) => handleLoadmore(e)}>load more</button>\r\n             </div>\r\n         </div>\r\n"
                },
                {
                    "date": 1706678112776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,11 @@\n import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1); // state variable for page number\r\n+    const [dataAll, setDataAll] = useState([]) as any[]; \r\n      const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n+     setDataAll(data)\r\n     // const [textData, setTextData] = useState<any[]>([]); // state variable for text data \r\n \r\n     // if (isLoading) {\r\n     //     return <div>Loading...</div>;\r\n@@ -19,14 +21,17 @@\n     }\r\n \r\n     useEffect(() => {\r\n         console.log(\"page\")\r\n+        const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean };\r\n+\r\n         // Add any side effect code here\r\n-    }, []);\r\n \r\n+    }, [page]);\r\n+\r\n     return (\r\n         <div>\r\n-            {data && data.map((item: any, index: number) => (\r\n+            {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n             <div>\r\n                 <button onClick={(e) => handleLoadmore(e)}>load more</button>\r\n"
                },
                {
                    "date": 1706678154417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,9 @@\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1); // state variable for page number\r\n     const [dataAll, setDataAll] = useState([]) as any[]; \r\n-     const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n-     setDataAll(data)\r\n+   \r\n     // const [textData, setTextData] = useState<any[]>([]); // state variable for text data \r\n \r\n     // if (isLoading) {\r\n     //     return <div>Loading...</div>;\r\n@@ -21,10 +20,11 @@\n     }\r\n \r\n     useEffect(() => {\r\n         console.log(\"page\")\r\n-        const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean };\r\n-\r\n+        const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n+        setDataAll(data)\r\n+     \r\n         // Add any side effect code here\r\n \r\n     }, [page]);\r\n \r\n"
                },
                {
                    "date": 1706678178442,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n \r\n     useEffect(() => {\r\n         console.log(\"page\")\r\n         const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n-        setDataAll(data)\r\n+       // setDataAll(data)\r\n      \r\n         // Add any side effect code here\r\n \r\n     }, [page]);\r\n"
                },
                {
                    "date": 1706678192689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n \r\n     useEffect(() => {\r\n         console.log(\"page\")\r\n         const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n-       // setDataAll(data)\r\n+        setDataAll(data)\r\n      \r\n         // Add any side effect code here\r\n \r\n     }, [page]);\r\n"
                },
                {
                    "date": 1706678207493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,24 +6,25 @@\n     const [dataAll, setDataAll] = useState([]) as any[]; \r\n    \r\n     // const [textData, setTextData] = useState<any[]>([]); // state variable for text data \r\n \r\n-    // if (isLoading) {\r\n-    //     return <div>Loading...</div>;\r\n-    // }\r\n+   \r\n \r\n-    // if (isError) {\r\n-    //     return <div>Error: {error?.message}</div>;\r\n-    // }\r\n-\r\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n     useEffect(() => {\r\n         console.log(\"page\")\r\n         const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n         setDataAll(data)\r\n+         if (isLoading) {\r\n+        return <div>Loading...</div>;\r\n+    }\r\n+\r\n+    if (isError) {\r\n+        return <div>Error: {error?.message}</div>;\r\n+    }\r\n      \r\n         // Add any side effect code here\r\n \r\n     }, [page]);\r\n"
                },
                {
                    "date": 1706678538510,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,30 +2,27 @@\n import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1); // state variable for page number\r\n-    const [dataAll, setDataAll] = useState([]) as any[]; \r\n-   \r\n-    // const [textData, setTextData] = useState<any[]>([]); // state variable for text data \r\n+    const [dataAll, setDataAll] = useState([]) as any[];\r\n \r\n-   \r\n-\r\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n     useEffect(() => {\r\n         console.log(\"page\")\r\n         const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n+        if (isLoading) {\r\n+            return <div>Loading...</div>;\r\n+        }\r\n+\r\n+        if (isError) {\r\n+            return <div>Error: {error?.message}</div>;\r\n+        }\r\n+\r\n         setDataAll(data)\r\n-         if (isLoading) {\r\n-        return <div>Loading...</div>;\r\n-    }\r\n \r\n-    if (isError) {\r\n-        return <div>Error: {error?.message}</div>;\r\n-    }\r\n-     \r\n         // Add any side effect code here\r\n \r\n     }, [page]);\r\n \r\n"
                },
                {
                    "date": 1706678569260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,15 +11,15 @@\n \r\n     useEffect(() => {\r\n         console.log(\"page\")\r\n         const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n-        if (isLoading) {\r\n-            return <div>Loading...</div>;\r\n-        }\r\n+        // if (isLoading) {\r\n+        //     return <div>Loading...</div>;\r\n+        // }\r\n \r\n-        if (isError) {\r\n-            return <div>Error: {error?.message}</div>;\r\n-        }\r\n+        // if (isError) {\r\n+        //     return <div>Error: {error?.message}</div>;\r\n+        // }\r\n \r\n         setDataAll(data)\r\n \r\n         // Add any side effect code here\r\n"
                },
                {
                    "date": 1706679201223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,34 +2,36 @@\n import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1); // state variable for page number\r\n-    const [dataAll, setDataAll] = useState([]) as any[];\r\n+    const [dataAll, setDataAll] = useState()as any[]; \r\n+     const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n+     setDataAll(data)\r\n+    // const [textData, setTextData] = useState<any[]>([]); // state variable for text data \r\n \r\n+    // if (isLoading) {\r\n+    //     return <div>Loading...</div>;\r\n+    // }\r\n+\r\n+    // if (isError) {\r\n+    //     return <div>Error: {error?.message}</div>;\r\n+    // }\r\n+\r\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n     useEffect(() => {\r\n         console.log(\"page\")\r\n-        const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n-        // if (isLoading) {\r\n-        //     return <div>Loading...</div>;\r\n-        // }\r\n-\r\n-        // if (isError) {\r\n-        //     return <div>Error: {error?.message}</div>;\r\n-        // }\r\n-\r\n-        setDataAll(data)\r\n-\r\n+        const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean };\r\n+        set\r\n         // Add any side effect code here\r\n \r\n     }, [page]);\r\n \r\n     return (\r\n         <div>\r\n-            {dataAll && dataAll.map((item: any, index: number) => (\r\n+            {data && data.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n             <div>\r\n                 <button onClick={(e) => handleLoadmore(e)}>load more</button>\r\n"
                },
                {
                    "date": 1706679207904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,10 +21,9 @@\n     }\r\n \r\n     useEffect(() => {\r\n         console.log(\"page\")\r\n-        const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean };\r\n-        set\r\n+\r\n         // Add any side effect code here\r\n \r\n     }, [page]);\r\n \r\n"
                },
                {
                    "date": 1706679226208,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n function GetText() {\r\n     const [page, setPage] = useState(1); // state variable for page number\r\n     const [dataAll, setDataAll] = useState()as any[]; \r\n      const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n-     setDataAll(data)\r\n+     \r\n     // const [textData, setTextData] = useState<any[]>([]); // state variable for text data \r\n \r\n     // if (isLoading) {\r\n     //     return <div>Loading...</div>;\r\n@@ -21,9 +21,9 @@\n     }\r\n \r\n     useEffect(() => {\r\n         console.log(\"page\")\r\n-\r\n+setDataAll(data)\r\n         // Add any side effect code here\r\n \r\n     }, [page]);\r\n \r\n"
                },
                {
                    "date": 1706679232124,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     }\r\n \r\n     useEffect(() => {\r\n         console.log(\"page\")\r\n-setDataAll(data)\r\n+//setDataAll(data)\r\n         // Add any side effect code here\r\n \r\n     }, [page]);\r\n \r\n"
                },
                {
                    "date": 1706679261768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,14 +19,14 @@\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n-    useEffect(() => {\r\n-        console.log(\"page\")\r\n-//setDataAll(data)\r\n-        // Add any side effect code here\r\n+//     useEffect(() => {\r\n+//         console.log(\"page\")\r\n+// //setDataAll(data)\r\n+//         // Add any side effect code here\r\n \r\n-    }, [page]);\r\n+//     }, [page]);\r\n \r\n     return (\r\n         <div>\r\n             {data && data.map((item: any, index: number) => (\r\n"
                },
                {
                    "date": 1706679290118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1); // state variable for page number\r\n     const [dataAll, setDataAll] = useState()as any[]; \r\n-     const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n+     const { data, error, isLoading, isError } = useGetText(`text,${page}`) ; // use type assertion for useGetText result\r\n      \r\n     // const [textData, setTextData] = useState<any[]>([]); // state variable for text data \r\n \r\n     // if (isLoading) {\r\n"
                },
                {
                    "date": 1706679295485,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1); // state variable for page number\r\n     const [dataAll, setDataAll] = useState()as any[]; \r\n-     const { data, error, isLoading, isError } = useGetText(`text,${page}`) ; // use type assertion for useGetText result\r\n+     const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n      \r\n     // const [textData, setTextData] = useState<any[]>([]); // state variable for text data \r\n \r\n     // if (isLoading) {\r\n"
                },
                {
                    "date": 1706679310174,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,18 +5,9 @@\n     const [page, setPage] = useState(1); // state variable for page number\r\n     const [dataAll, setDataAll] = useState()as any[]; \r\n      const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n      \r\n-    // const [textData, setTextData] = useState<any[]>([]); // state variable for text data \r\n \r\n-    // if (isLoading) {\r\n-    //     return <div>Loading...</div>;\r\n-    // }\r\n-\r\n-    // if (isError) {\r\n-    //     return <div>Error: {error?.message}</div>;\r\n-    // }\r\n-\r\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n"
                },
                {
                    "date": 1706679332889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,10 @@\n import React, { useEffect, useState } from 'react';\r\n import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n-    const [page, setPage] = useState(1); // state variable for page number\r\n-    const [dataAll, setDataAll] = useState()as any[]; \r\n+    //const [page, setPage] = useState(1); // state variable for page number\r\n+   // const [dataAll, setDataAll] = useState()as any[]; \r\n      const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n      \r\n \r\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n"
                },
                {
                    "date": 1706679339935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,9 +7,9 @@\n      const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n      \r\n \r\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n-        setPage(prevPage => prevPage + 1); // increment page number\r\n+        //setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n //     useEffect(() => {\r\n //         console.log(\"page\")\r\n"
                },
                {
                    "date": 1706679587572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n function GetText() {\r\n     //const [page, setPage] = useState(1); // state variable for page number\r\n    // const [dataAll, setDataAll] = useState()as any[]; \r\n-     const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n+    //  const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n      \r\n \r\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n         //setPage(prevPage => prevPage + 1); // increment page number\r\n"
                },
                {
                    "date": 1706679595025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,11 +19,11 @@\n //     }, [page]);\r\n \r\n     return (\r\n         <div>\r\n-            {data && data.map((item: any, index: number) => (\r\n+            {/* {data && data.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n-            ))}\r\n+            ))} */}\r\n             <div>\r\n                 <button onClick={(e) => handleLoadmore(e)}>load more</button>\r\n             </div>\r\n         </div>\r\n"
                },
                {
                    "date": 1706679604950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n             {/* {data && data.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))} */}\r\n             <div>\r\n-                <button onClick={(e) => handleLoadmore(e)}>load more</button>\r\n+                {/* <button onClick={(e) => handleLoadmore(e)}>load more</button> */}\r\n             </div>\r\n         </div>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1706679623716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,11 +6,11 @@\n    // const [dataAll, setDataAll] = useState()as any[]; \r\n     //  const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n      \r\n \r\n-    function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n-        //setPage(prevPage => prevPage + 1); // increment page number\r\n-    }\r\n+    // function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n+    //     //setPage(prevPage => prevPage + 1); // increment page number\r\n+    // }\r\n \r\n //     useEffect(() => {\r\n //         console.log(\"page\")\r\n // //setDataAll(data)\r\n"
                },
                {
                    "date": 1706679639031,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import React, { useEffect, useState } from 'react';\r\n-import { useGetText } from './hooks/useGetText';\r\n+//import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n     //const [page, setPage] = useState(1); // state variable for page number\r\n    // const [dataAll, setDataAll] = useState()as any[]; \r\n"
                },
                {
                    "date": 1706680034609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,14 +19,9 @@\n //     }, [page]);\r\n \r\n     return (\r\n         <div>\r\n-            {/* {data && data.map((item: any, index: number) => (\r\n-                <div key={index}>{item.title_en}</div>\r\n-            ))} */}\r\n-            <div>\r\n-                {/* <button onClick={(e) => handleLoadmore(e)}>load more</button> */}\r\n-            </div>\r\n+\r\n         </div>\r\n     );\r\n }\r\n \r\n"
                },
                {
                    "date": 1706680069029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,16 @@\n import React, { useEffect, useState } from 'react';\r\n-//import { useGetText } from './hooks/useGetText';\r\n+import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n     //const [page, setPage] = useState(1); // state variable for page number\r\n    // const [dataAll, setDataAll] = useState()as any[]; \r\n     //  const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n      \r\n \r\n-    // function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n-    //     //setPage(prevPage => prevPage + 1); // increment page number\r\n-    // }\r\n+    function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n+        //setPage(prevPage => prevPage + 1); // increment page number\r\n+    }\r\n \r\n //     useEffect(() => {\r\n //         console.log(\"page\")\r\n // //setDataAll(data)\r\n@@ -19,9 +19,14 @@\n //     }, [page]);\r\n \r\n     return (\r\n         <div>\r\n-\r\n+            {/* {data && data.map((item: any, index: number) => (\r\n+                <div key={index}>{item.title_en}</div>\r\n+            ))} */}\r\n+            <div>\r\n+                {/* <button onClick={(e) => handleLoadmore(e)}>load more</button> */}\r\n+            </div>\r\n         </div>\r\n     );\r\n }\r\n \r\n"
                },
                {
                    "date": 1706680077671,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n function GetText() {\r\n     //const [page, setPage] = useState(1); // state variable for page number\r\n    // const [dataAll, setDataAll] = useState()as any[]; \r\n-    //  const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n+     const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n      \r\n \r\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n         //setPage(prevPage => prevPage + 1); // increment page number\r\n@@ -19,13 +19,13 @@\n //     }, [page]);\r\n \r\n     return (\r\n         <div>\r\n-            {/* {data && data.map((item: any, index: number) => (\r\n+            {data && data.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n-            ))} */}\r\n+            ))}\r\n             <div>\r\n-                {/* <button onClick={(e) => handleLoadmore(e)}>load more</button> */}\r\n+                <button onClick={(e) => handleLoadmore(e)}>load more</button>\r\n             </div>\r\n         </div>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1706680089611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,15 @@\n import React, { useEffect, useState } from 'react';\r\n import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n-    //const [page, setPage] = useState(1); // state variable for page number\r\n-   // const [dataAll, setDataAll] = useState()as any[]; \r\n+    const [page, setPage] = useState(1); // state variable for page number\r\n+    const [dataAll, setDataAll] = useState()as any[]; \r\n      const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n      \r\n \r\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n-        //setPage(prevPage => prevPage + 1); // increment page number\r\n+        setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n //     useEffect(() => {\r\n //         console.log(\"page\")\r\n"
                },
                {
                    "date": 1706680107535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,14 +10,14 @@\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n-//     useEffect(() => {\r\n-//         console.log(\"page\")\r\n-// //setDataAll(data)\r\n-//         // Add any side effect code here\r\n+    useEffect(() => {\r\n+        console.log(\"page\")\r\n+//setDataAll(data)\r\n+        // Add any side effect code here\r\n \r\n-//     }, [page]);\r\n+    }, [page]);\r\n \r\n     return (\r\n         <div>\r\n             {data && data.map((item: any, index: number) => (\r\n"
                },
                {
                    "date": 1706680115666,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n     }\r\n \r\n     useEffect(() => {\r\n         console.log(\"page\")\r\n-//setDataAll(data)\r\n+setDataAll(data)\r\n         // Add any side effect code here\r\n \r\n     }, [page]);\r\n \r\n"
                },
                {
                    "date": 1706680129120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     }, [page]);\r\n \r\n     return (\r\n         <div>\r\n-            {data && data.map((item: any, index: number) => (\r\n+            {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n             <div>\r\n                 <button onClick={(e) => handleLoadmore(e)}>load more</button>\r\n"
                },
                {
                    "date": 1706680217814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     }, [page]);\r\n \r\n     return (\r\n         <div>\r\n-            {dataAll && dataAll.map((item: any, index: number) => (\r\n+            {data && data.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n             <div>\r\n                 <button onClick={(e) => handleLoadmore(e)}>load more</button>\r\n"
                },
                {
                    "date": 1706680231397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,16 +3,16 @@\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1); // state variable for page number\r\n     const [dataAll, setDataAll] = useState()as any[]; \r\n-     const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; // use type assertion for useGetText result\r\n+    / use type assertion for useGetText result\r\n      \r\n \r\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n-    useEffect(() => {\r\n+    useEffect(() => { const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; /\r\n         console.log(\"page\")\r\n setDataAll(data)\r\n         // Add any side effect code here\r\n \r\n"
                },
                {
                    "date": 1706680237120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1); // state variable for page number\r\n     const [dataAll, setDataAll] = useState()as any[]; \r\n-    / use type assertion for useGetText result\r\n+    // use type assertion for useGetText result\r\n      \r\n \r\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n         setPage(prevPage => prevPage + 1); // increment page number\r\n"
                },
                {
                    "date": 1706680247850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n     }, [page]);\r\n \r\n     return (\r\n         <div>\r\n-            {data && data.map((item: any, index: number) => (\r\n+            {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n             <div>\r\n                 <button onClick={(e) => handleLoadmore(e)}>load more</button>\r\n"
                },
                {
                    "date": 1706680278002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,19 +2,20 @@\n import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1); // state variable for page number\r\n-    const [dataAll, setDataAll] = useState()as any[]; \r\n+    const [dataAll, setDataAll] = useState() as any[];\r\n     // use type assertion for useGetText result\r\n-     \r\n \r\n+\r\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n-    useEffect(() => { const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; /\r\n+    useEffect(() => {\r\n+        const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; \r\n         console.log(\"page\")\r\n-setDataAll(data)\r\n+        setDataAll(data)\r\n         // Add any side effect code here\r\n \r\n     }, [page]);\r\n \r\n"
                },
                {
                    "date": 1706680291100,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n     useEffect(() => {\r\n-        const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; \r\n+      //  const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; \r\n         console.log(\"page\")\r\n         setDataAll(data)\r\n         // Add any side effect code here\r\n \r\n"
                },
                {
                    "date": 1706680296480,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n \r\n     useEffect(() => {\r\n       //  const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; \r\n         console.log(\"page\")\r\n-        setDataAll(data)\r\n+        setDataAll([])\r\n         // Add any side effect code here\r\n \r\n     }, [page]);\r\n \r\n"
                },
                {
                    "date": 1706684473007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n import React, { useEffect, useState } from 'react';\r\n import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n+    const { data, error, isLoading, isError } = useGetText(`text,${1}`) as { data: any[], error: any, isLoading: boolean, isError: boolean };    \r\n     const [page, setPage] = useState(1); // state variable for page number\r\n     const [dataAll, setDataAll] = useState() as any[];\r\n     // use type assertion for useGetText result\r\n \r\n"
                },
                {
                    "date": 1706684484161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,9 +21,9 @@\n     }, [page]);\r\n \r\n     return (\r\n         <div>\r\n-            {dataAll && dataAll.map((item: any, index: number) => (\r\n+            {data && data.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n             <div>\r\n                 <button onClick={(e) => handleLoadmore(e)}>load more</button>\r\n"
                },
                {
                    "date": 1706684858417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,25 @@\n import React, { useEffect, useState } from 'react';\r\n import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n-    const { data, error, isLoading, isError } = useGetText(`text,${1}`) as { data: any[], error: any, isLoading: boolean, isError: boolean };    \r\n-    const [page, setPage] = useState(1); // state variable for page number\r\n-    const [dataAll, setDataAll] = useState() as any[];\r\n-    // use type assertion for useGetText result\r\n+    const [page, setPage] = useState(1);\r\n+    const [dataAll, setDataAll] = useState([]) as any[];\r\n \r\n-\r\n     function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n     useEffect(() => {\r\n-      //  const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean }; \r\n-        console.log(\"page\")\r\n-        setDataAll([])\r\n-        // Add any side effect code here\r\n-\r\n+        const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean };\r\n+        if (data) {\r\n+            setDataAll(prevData => [...prevData, ...data]);\r\n+        }\r\n     }, [page]);\r\n \r\n     return (\r\n         <div>\r\n-            {data && data.map((item: any, index: number) => (\r\n+            {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n             <div>\r\n                 <button onClick={(e) => handleLoadmore(e)}>load more</button>\r\n"
                },
                {
                    "date": 1706684936709,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n \r\n     useEffect(() => {\r\n         const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean };\r\n         if (data) {\r\n-            setDataAll(prevData => [...prevData, ...data]);\r\n+            setDataAll(prevData  => [...prevData, ...data]);\r\n         }\r\n     }, [page]);\r\n \r\n     return (\r\n"
                },
                {
                    "date": 1706684975419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n \r\n     useEffect(() => {\r\n         const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean };\r\n         if (data) {\r\n-            setDataAll(prevData  => [...prevData, ...data]);\r\n+            setDataAll((prevData:any[])  => [...prevData, ...data]);\r\n         }\r\n     }, [page]);\r\n \r\n     return (\r\n"
                },
                {
                    "date": 1706685089146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,12 +9,15 @@\n         setPage(prevPage => prevPage + 1); // increment page number\r\n     }\r\n \r\n     useEffect(() => {\r\n-        const { data, error, isLoading, isError } = useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean };\r\n-        if (data) {\r\n-            setDataAll((prevData:any[])  => [...prevData, ...data]);\r\n+        const fetchProjects = async () => {\r\n+            const { data, error, isLoading, isError } = await useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean };\r\n+            if (data) {\r\n+                setDataAll((prevData:any[]) => [...prevData, ...data]);\r\n+            }\r\n         }\r\n+        fetchProjects();\r\n     }, [page]);\r\n \r\n     return (\r\n         <div>\r\n"
                },
                {
                    "date": 1706685808098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,34 +1,32 @@\n-import React, { useEffect, useState } from 'react';\r\n+import React, { useState } from 'react';\r\n import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1);\r\n-    const [dataAll, setDataAll] = useState([]) as any[];\r\n+    const { data, error, isLoading, isError } = useGetText(`text,${page}`);\r\n \r\n-    function handleLoadmore(e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void {\r\n-        setPage(prevPage => prevPage + 1); // increment page number\r\n+    const handleLoadMore = () => {\r\n+        setPage(prevPage => prevPage + 1);\r\n+    };\r\n+\r\n+    if (isLoading) {\r\n+        return <div>Loading...</div>;\r\n     }\r\n \r\n-    useEffect(() => {\r\n-        const fetchProjects = async () => {\r\n-            const { data, error, isLoading, isError } = await useGetText(`text,${page}`) as { data: any[], error: any, isLoading: boolean, isError: boolean };\r\n-            if (data) {\r\n-                setDataAll((prevData:any[]) => [...prevData, ...data]);\r\n-            }\r\n-        }\r\n-        fetchProjects();\r\n-    }, [page]);\r\n+    if (isError) {\r\n+        return <div>Error: {error.message}</div>;\r\n+    }\r\n \r\n     return (\r\n         <div>\r\n-            {dataAll && dataAll.map((item: any, index: number) => (\r\n+            {data && data.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n-            <div>\r\n-                <button onClick={(e) => handleLoadmore(e)}>load more</button>\r\n-            </div>\r\n+            <button onClick={handleLoadMore}>Load more</button>\r\n         </div>\r\n     );\r\n }\r\n \r\n+\r\n+\r\n export default GetText;\r\n"
                },
                {
                    "date": 1706685815904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n         return <div>Loading...</div>;\r\n     }\r\n \r\n     if (isError) {\r\n-        return <div>Error: {error.message}</div>;\r\n+        return <div>Error: {error?.message}</div>;\r\n     }\r\n \r\n     return (\r\n         <div>\r\n"
                },
                {
                    "date": 1706686155516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,12 +2,14 @@\n import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1);\r\n+    const [dataAll, setDataAll] = useState([] as any[]);\r\n     const { data, error, isLoading, isError } = useGetText(`text,${page}`);\r\n \r\n     const handleLoadMore = () => {\r\n         setPage(prevPage => prevPage + 1);\r\n+        setDataAll((prev:any[])=>[...prev, ...data])\r\n     };\r\n \r\n     if (isLoading) {\r\n         return <div>Loading...</div>;\r\n"
                },
                {
                    "date": 1706686176780,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     }\r\n \r\n     return (\r\n         <div>\r\n-            {data && data.map((item: any, index: number) => (\r\n+            {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n             <button onClick={handleLoadMore}>Load more</button>\r\n         </div>\r\n"
                },
                {
                    "date": 1706686533317,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n             {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n             <button onClick={handleLoadMore}>Load more</button>\r\n+            <button onClick={() => refetch()}>Refetch</button>\r\n         </div>\r\n     );\r\n }\r\n \r\n"
                },
                {
                    "date": 1706686539143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1);\r\n     const [dataAll, setDataAll] = useState([] as any[]);\r\n-    const { data, error, isLoading, isError } = useGetText(`text,${page}`);\r\n+    const { data, error, isLoading, isError,refetch } = useGetText(`text,${page}`);\r\n \r\n     const handleLoadMore = () => {\r\n         setPage(prevPage => prevPage + 1);\r\n         setDataAll((prev:any[])=>[...prev, ...data])\r\n"
                },
                {
                    "date": 1706687233428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,17 @@\n-import React, { useState } from 'react';\r\n+import React from 'react';\r\n import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n-    const [page, setPage] = useState(1);\r\n-    const [dataAll, setDataAll] = useState([] as any[]);\r\n-    const { data, error, isLoading, isError,refetch } = useGetText(`text,${page}`);\r\n+    // Use your custom hook with some params\r\n+    const { data, error, isLoading, isError, fetchNextPage, refetchActivePages } = useGetText(`text,1`);\r\n \r\n+    // Handle the load more button\r\n     const handleLoadMore = () => {\r\n-        setPage(prevPage => prevPage + 1);\r\n-        setDataAll((prev:any[])=>[...prev, ...data])\r\n+        fetchNextPage();\r\n     };\r\n \r\n+    // Handle the loading, error and success states\r\n     if (isLoading) {\r\n         return <div>Loading...</div>;\r\n     }\r\n \r\n@@ -20,16 +20,20 @@\n     }\r\n \r\n     return (\r\n         <div>\r\n-            {dataAll && dataAll.map((item: any, index: number) => (\r\n-                <div key={index}>{item.title_en}</div>\r\n+            {data.pages && data.pages.map((page: any, index: number) => (\r\n+                // Render each page of data\r\n+                <div key={index}>\r\n+                    {page.map((item: any, index: number) => (\r\n+                        // Render each item of data\r\n+                        <div key={index}>{item.title_en}</div>\r\n+                    ))}\r\n+                </div>\r\n             ))}\r\n             <button onClick={handleLoadMore}>Load more</button>\r\n-            <button onClick={() => refetch()}>Refetch</button>\r\n+            <button onClick={() => refetchActivePages()}>Refetch</button>\r\n         </div>\r\n     );\r\n }\r\n \r\n-\r\n-\r\n export default GetText;\r\n"
                },
                {
                    "date": 1706687446166,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,17 @@\n-import React from 'react';\r\n+import React, { useState } from 'react';\r\n import { useGetText } from './hooks/useGetText';\r\n \r\n function GetText() {\r\n-    // Use your custom hook with some params\r\n-    const { data, error, isLoading, isError, fetchNextPage, refetchActivePages } = useGetText(`text,1`);\r\n+    const [page, setPage] = useState(1);\r\n+    const [dataAll, setDataAll] = useState([] as any[]);\r\n+    const { data, error, isLoading, isError,refetch } = useGetText(`text,${page}`);\r\n \r\n-    // Handle the load more button\r\n     const handleLoadMore = () => {\r\n-        fetchNextPage();\r\n+        setPage(prevPage => prevPage + 1);\r\n+        setDataAll((prev:any[])=>[...prev, ...data])\r\n     };\r\n \r\n-    // Handle the loading, error and success states\r\n     if (isLoading) {\r\n         return <div>Loading...</div>;\r\n     }\r\n \r\n@@ -20,20 +20,16 @@\n     }\r\n \r\n     return (\r\n         <div>\r\n-            {data.pages && data.pages.map((page: any, index: number) => (\r\n-                // Render each page of data\r\n-                <div key={index}>\r\n-                    {page.map((item: any, index: number) => (\r\n-                        // Render each item of data\r\n-                        <div key={index}>{item.title_en}</div>\r\n-                    ))}\r\n-                </div>\r\n+            {dataAll && dataAll.map((item: any, index: number) => (\r\n+                <div key={index}>{item.title_en}</div>\r\n             ))}\r\n             <button onClick={handleLoadMore}>Load more</button>\r\n-            <button onClick={() => refetchActivePages()}>Refetch</button>\r\n+            <button onClick={() => refetch()}>Refetch</button>\r\n         </div>\r\n     );\r\n }\r\n \r\n+\r\n+\r\n export default GetText;\r\n"
                },
                {
                    "date": 1706687589148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1);\r\n     const [dataAll, setDataAll] = useState([] as any[]);\r\n-    const { data, error, isLoading, isError,refetch } = useGetText(`text,${page}`);\r\n+    const { data, error, isLoading, isError,fetchNextPage, refetch } = useGetText(`text,${page}`);\r\n \r\n     const handleLoadMore = () => {\r\n         setPage(prevPage => prevPage + 1);\r\n         setDataAll((prev:any[])=>[...prev, ...data])\r\n@@ -23,9 +23,9 @@\n         <div>\r\n             {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n-            <button onClick={handleLoadMore}>Load more</button>\r\n+            <button onClick={() =>fetchNextPage()}>Load more</button>\r\n             <button onClick={() => refetch()}>Refetch</button>\r\n         </div>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1706687594337,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,12 +5,12 @@\n     const [page, setPage] = useState(1);\r\n     const [dataAll, setDataAll] = useState([] as any[]);\r\n     const { data, error, isLoading, isError,fetchNextPage, refetch } = useGetText(`text,${page}`);\r\n \r\n-    const handleLoadMore = () => {\r\n-        setPage(prevPage => prevPage + 1);\r\n-        setDataAll((prev:any[])=>[...prev, ...data])\r\n-    };\r\n+    // const handleLoadMore = () => {\r\n+    //     setPage(prevPage => prevPage + 1);\r\n+    //     setDataAll((prev:any[])=>[...prev, ...data])\r\n+    // };\r\n \r\n     if (isLoading) {\r\n         return <div>Loading...</div>;\r\n     }\r\n"
                },
                {
                    "date": 1706687612057,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n     }\r\n \r\n     return (\r\n         <div>\r\n-            {dataAll && dataAll.map((item: any, index: number) => (\r\n+            {data && data.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n             <button onClick={() =>fetchNextPage()}>Load more</button>\r\n             <button onClick={() => refetch()}>Refetch</button>\r\n"
                },
                {
                    "date": 1706687631700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,14 +3,14 @@\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1);\r\n     const [dataAll, setDataAll] = useState([] as any[]);\r\n-    const { data, error, isLoading, isError,fetchNextPage, refetch } = useGetText(`text,${page}`);\r\n+    const { data, error, isLoading, isError,refetch } = useGetText(`text,${page}`);\r\n \r\n-    // const handleLoadMore = () => {\r\n-    //     setPage(prevPage => prevPage + 1);\r\n-    //     setDataAll((prev:any[])=>[...prev, ...data])\r\n-    // };\r\n+    const handleLoadMore = () => {\r\n+        setPage(prevPage => prevPage + 1);\r\n+        setDataAll((prev:any[])=>[...prev, ...data])\r\n+    };\r\n \r\n     if (isLoading) {\r\n         return <div>Loading...</div>;\r\n     }\r\n@@ -20,12 +20,12 @@\n     }\r\n \r\n     return (\r\n         <div>\r\n-            {data && data.map((item: any, index: number) => (\r\n+            {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n-            <button onClick={() =>fetchNextPage()}>Load more</button>\r\n+            <button onClick={handleLoadMore}>Load more</button>\r\n             <button onClick={() => refetch()}>Refetch</button>\r\n         </div>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1706687670843,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,10 @@\n             {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n             <button onClick={handleLoadMore}>Load more</button>\r\n-            <button onClick={() => refetch()}>Refetch</button>\r\n+            <button onClick={()=>refetch()}>Load more</button>\r\n+            \r\n         </div>\r\n     );\r\n }\r\n \r\n"
                },
                {
                    "date": 1706687730626,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n             {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n             <button onClick={handleLoadMore}>Load more</button>\r\n-            <button onClick={()=>refetch()}>Load more</button>\r\n+            <button onClick={()=>{refetch(); setDataAll((prev:any[])=>data)}}>Load more</button>\r\n             \r\n         </div>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1706687743394,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n             {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n             <button onClick={handleLoadMore}>Load more</button>\r\n-            <button onClick={()=>{refetch(); setDataAll((prev:any[])=>data)}}>Load more</button>\r\n+            <button onClick={()=>{refetch(); setDataAll((prev:any[])=>data)}}>Refresh Again</button>\r\n             \r\n         </div>\r\n     );\r\n }\r\n"
                },
                {
                    "date": 1706690451499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n-import React, { useState } from 'react';\r\n+import React, { useEffect, useState } from 'react';\r\n import { useGetText } from './hooks/useGetText';\r\n+import { useParseText } from './hooks/useParseText';\r\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1);\r\n     const [dataAll, setDataAll] = useState([] as any[]);\r\n@@ -17,8 +18,18 @@\n \r\n     if (isError) {\r\n         return <div>Error: {error?.message}</div>;\r\n     }\r\n+    useEffect(() => {\r\n+        const mapped= dataAll.map((item:any) => {\r\n+            return {\r\n+              id: item.id,\r\n+              text: item.title_en,\r\n+            } as Text;\r\n+          });\r\n+        const { result }=useParseText(mapped)\r\n+    }, [dataAll])\r\n+    \r\n \r\n     return (\r\n         <div>\r\n             {dataAll && dataAll.map((item: any, index: number) => (\r\n"
                },
                {
                    "date": 1706690513266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,11 +21,12 @@\n     }\r\n     useEffect(() => {\r\n         const mapped= dataAll.map((item:any) => {\r\n             return {\r\n+                \r\n               id: item.id,\r\n               text: item.title_en,\r\n-            } as Text;\r\n+            } as Sentence;\r\n           });\r\n         const { result }=useParseText(mapped)\r\n     }, [dataAll])\r\n     \r\n"
                },
                {
                    "date": 1706690963001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,12 @@\n     const [page, setPage] = useState(1);\r\n     const [dataAll, setDataAll] = useState([] as any[]);\r\n     const { data, error, isLoading, isError,refetch } = useGetText(`text,${page}`);\r\n \r\n+    const [textContent, setTextContent] = useState<TextContent | undefined>(undefined);\r\n+\r\n+\r\n+\r\n     const handleLoadMore = () => {\r\n         setPage(prevPage => prevPage + 1);\r\n         setDataAll((prev:any[])=>[...prev, ...data])\r\n     };\r\n@@ -19,16 +23,18 @@\n     if (isError) {\r\n         return <div>Error: {error?.message}</div>;\r\n     }\r\n     useEffect(() => {\r\n-        const mapped= dataAll.map((item:any) => {\r\n-            return {\r\n-                \r\n-              id: item.id,\r\n-              text: item.title_en,\r\n-            } as Sentence;\r\n-          });\r\n-        const { result }=useParseText(mapped)\r\n+        // const mapped= dataAll.map((item:any) => {\r\n+        //     return {     \r\n+        //       id: item.id,\r\n+        //       title: item.title_en,\r\n+        //       content:item.title_en,\r\n+        //     } as TextContent;\r\n+        //   });\r\n+        const content:TextContent={id:1,title:\"current api result\" , content: data.map((item:any) => item.title_en).join('. ')}\r\n+        setTextContent(content)\r\n+        #const { result }=useParseText(mapped)\r\n     }, [dataAll])\r\n     \r\n \r\n     return (\r\n"
                },
                {
                    "date": 1706690968531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n         //     } as TextContent;\r\n         //   });\r\n         const content:TextContent={id:1,title:\"current api result\" , content: data.map((item:any) => item.title_en).join('. ')}\r\n         setTextContent(content)\r\n-        #const { result }=useParseText(mapped)\r\n+        //const { result }=useParseText(mapped)\r\n     }, [dataAll])\r\n     \r\n \r\n     return (\r\n"
                },
                {
                    "date": 1706690988341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,12 +30,11 @@\n         //       title: item.title_en,\r\n         //       content:item.title_en,\r\n         //     } as TextContent;\r\n         //   });\r\n-        const content:TextContent={id:1,title:\"current api result\" , content: data.map((item:any) => item.title_en).join('. ')}\r\n-        setTextContent(content)\r\n+\r\n         //const { result }=useParseText(mapped)\r\n-    }, [dataAll])\r\n+    }, [])\r\n     \r\n \r\n     return (\r\n         <div>\r\n"
                },
                {
                    "date": 1706691032148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,11 +30,12 @@\n         //       title: item.title_en,\r\n         //       content:item.title_en,\r\n         //     } as TextContent;\r\n         //   });\r\n-\r\n+        const content:TextContent={id:1,title:\"current api result\" , content: data.map((item:any) => item.title_en).join('. ')}\r\n+        setTextContent(content)\r\n         //const { result }=useParseText(mapped)\r\n-    }, [])\r\n+    }, )\r\n     \r\n \r\n     return (\r\n         <div>\r\n"
                },
                {
                    "date": 1706691043315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,11 +31,11 @@\n         //       content:item.title_en,\r\n         //     } as TextContent;\r\n         //   });\r\n         const content:TextContent={id:1,title:\"current api result\" , content: data.map((item:any) => item.title_en).join('. ')}\r\n-        setTextContent(content)\r\n+        //setTextContent(content)\r\n         //const { result }=useParseText(mapped)\r\n-    }, )\r\n+    }, [dataAll])\r\n     \r\n \r\n     return (\r\n         <div>\r\n"
                },
                {
                    "date": 1706691108274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,9 +31,9 @@\n         //       content:item.title_en,\r\n         //     } as TextContent;\r\n         //   });\r\n         const content:TextContent={id:1,title:\"current api result\" , content: data.map((item:any) => item.title_en).join('. ')}\r\n-        //setTextContent(content)\r\n+        setTextContent(content)\r\n         //const { result }=useParseText(mapped)\r\n     }, [dataAll])\r\n     \r\n \r\n"
                },
                {
                    "date": 1706691167716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,20 +22,20 @@\n \r\n     if (isError) {\r\n         return <div>Error: {error?.message}</div>;\r\n     }\r\n-    useEffect(() => {\r\n-        // const mapped= dataAll.map((item:any) => {\r\n-        //     return {     \r\n-        //       id: item.id,\r\n-        //       title: item.title_en,\r\n-        //       content:item.title_en,\r\n-        //     } as TextContent;\r\n-        //   });\r\n-        const content:TextContent={id:1,title:\"current api result\" , content: data.map((item:any) => item.title_en).join('. ')}\r\n-        setTextContent(content)\r\n-        //const { result }=useParseText(mapped)\r\n-    }, [dataAll])\r\n+    // useEffect(() => {\r\n+    //     // const mapped= dataAll.map((item:any) => {\r\n+    //     //     return {     \r\n+    //     //       id: item.id,\r\n+    //     //       title: item.title_en,\r\n+    //     //       content:item.title_en,\r\n+    //     //     } as TextContent;\r\n+    //     //   });\r\n+    //     const content:TextContent={id:1,title:\"current api result\" , content: data.map((item:any) => item.title_en).join('. ')}\r\n+    //     setTextContent(content)\r\n+    //     //const { result }=useParseText(mapped)\r\n+    // }, [dataAll])\r\n     \r\n \r\n     return (\r\n         <div>\r\n"
                },
                {
                    "date": 1706691300308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,8 @@\n import React, { useEffect, useState } from 'react';\r\n import { useGetText } from './hooks/useGetText';\r\n import { useParseText } from './hooks/useParseText';\r\n+import { TextContent } from './DTO/dto';\r\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1);\r\n     const [dataAll, setDataAll] = useState([] as any[]);\r\n"
                },
                {
                    "date": 1706691365819,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1);\r\n     const [dataAll, setDataAll] = useState([] as any[]);\r\n-    const { data, error, isLoading, isError,refetch } = useGetText(`text,${page}`);\r\n+    const { data, error, isLoading, isError,content,refetch } = useGetText(`text,${page}`);\r\n \r\n     const [textContent, setTextContent] = useState<TextContent | undefined>(undefined);\r\n \r\n \r\n@@ -42,8 +42,9 @@\n         <div>\r\n             {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n+            {content?}\r\n             <button onClick={handleLoadMore}>Load more</button>\r\n             <button onClick={()=>{refetch(); setDataAll((prev:any[])=>data)}}>Refresh Again</button>\r\n             \r\n         </div>\r\n"
                },
                {
                    "date": 1706691426405,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n         <div>\r\n             {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n-            {content?}\r\n+            {content?.content}\r\n             <button onClick={handleLoadMore}>Load more</button>\r\n             <button onClick={()=>{refetch(); setDataAll((prev:any[])=>data)}}>Refresh Again</button>\r\n             \r\n         </div>\r\n"
                },
                {
                    "date": 1706691715016,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,10 +35,12 @@\n     //     const content:TextContent={id:1,title:\"current api result\" , content: data.map((item:any) => item.title_en).join('. ')}\r\n     //     setTextContent(content)\r\n     //     //const { result }=useParseText(mapped)\r\n     // }, [dataAll])\r\n-    \r\n+     useEffect(() => {\r\n \r\n+      }, [page])\r\n+\r\n     return (\r\n         <div>\r\n             {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n"
                },
                {
                    "date": 1706691730365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \r\n function GetText() {\r\n     const [page, setPage] = useState(1);\r\n     const [dataAll, setDataAll] = useState([] as any[]);\r\n-    const { data, error, isLoading, isError,content,refetch } = useGetText(`text,${page}`);\r\n+    const { data, error, isLoading, isError,refetch } = useGetText(`text,${page}`);\r\n \r\n     const [textContent, setTextContent] = useState<TextContent | undefined>(undefined);\r\n \r\n \r\n@@ -44,9 +44,9 @@\n         <div>\r\n             {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n-            {content?.content}\r\n+            {/* {content?.content} */}\r\n             <button onClick={handleLoadMore}>Load more</button>\r\n             <button onClick={()=>{refetch(); setDataAll((prev:any[])=>data)}}>Refresh Again</button>\r\n             \r\n         </div>\r\n"
                },
                {
                    "date": 1706691759333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,11 +35,11 @@\n     //     const content:TextContent={id:1,title:\"current api result\" , content: data.map((item:any) => item.title_en).join('. ')}\r\n     //     setTextContent(content)\r\n     //     //const { result }=useParseText(mapped)\r\n     // }, [dataAll])\r\n-     useEffect(() => {\r\n+    //  useEffect(() => {\r\n \r\n-      }, [page])\r\n+    //   }, [page])\r\n \r\n     return (\r\n         <div>\r\n             {dataAll && dataAll.map((item: any, index: number) => (\r\n"
                },
                {
                    "date": 1706691815047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,11 +35,11 @@\n     //     const content:TextContent={id:1,title:\"current api result\" , content: data.map((item:any) => item.title_en).join('. ')}\r\n     //     setTextContent(content)\r\n     //     //const { result }=useParseText(mapped)\r\n     // }, [dataAll])\r\n-    //  useEffect(() => {\r\n+     useEffect(() => {\r\n \r\n-    //   }, [page])\r\n+      }, [page])\r\n \r\n     return (\r\n         <div>\r\n             {dataAll && dataAll.map((item: any, index: number) => (\r\n"
                },
                {
                    "date": 1706691828087,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,12 @@\n import { useParseText } from './hooks/useParseText';\r\n import { TextContent } from './DTO/dto';\r\n \r\n function GetText() {\r\n+    useEffect(() => {\r\n+\r\n+    }, [page])\r\n+\r\n     const [page, setPage] = useState(1);\r\n     const [dataAll, setDataAll] = useState([] as any[]);\r\n     const { data, error, isLoading, isError,refetch } = useGetText(`text,${page}`);\r\n \r\n@@ -35,12 +39,9 @@\n     //     const content:TextContent={id:1,title:\"current api result\" , content: data.map((item:any) => item.title_en).join('. ')}\r\n     //     setTextContent(content)\r\n     //     //const { result }=useParseText(mapped)\r\n     // }, [dataAll])\r\n-     useEffect(() => {\r\n \r\n-      }, [page])\r\n-\r\n     return (\r\n         <div>\r\n             {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n"
                },
                {
                    "date": 1706691870099,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,17 +3,19 @@\n import { useParseText } from './hooks/useParseText';\r\n import { TextContent } from './DTO/dto';\r\n \r\n function GetText() {\r\n+    \r\n+    const [page, setPage] = useState(1);\r\n+    const [textContent, setTextContent] = useState<TextContent | undefined>(undefined);\r\n+\r\n     useEffect(() => {\r\n-\r\n+        setTextContent({id:1,title:\"current api result\" , content: data.map((item:any) => item.title_en).join('. ')} as TextContent)\r\n     }, [page])\r\n \r\n-    const [page, setPage] = useState(1);\r\n     const [dataAll, setDataAll] = useState([] as any[]);\r\n     const { data, error, isLoading, isError,refetch } = useGetText(`text,${page}`);\r\n \r\n-    const [textContent, setTextContent] = useState<TextContent | undefined>(undefined);\r\n \r\n \r\n \r\n     const handleLoadMore = () => {\r\n"
                },
                {
                    "date": 1706691879892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n         <div>\r\n             {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n-            {/* {content?.content} */}\r\n+            {content?.content}\r\n             <button onClick={handleLoadMore}>Load more</button>\r\n             <button onClick={()=>{refetch(); setDataAll((prev:any[])=>data)}}>Refresh Again</button>\r\n             \r\n         </div>\r\n"
                },
                {
                    "date": 1706691889545,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n         <div>\r\n             {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n-            {content?.content}\r\n+            {textContent?.content}\r\n             <button onClick={handleLoadMore}>Load more</button>\r\n             <button onClick={()=>{refetch(); setDataAll((prev:any[])=>data)}}>Refresh Again</button>\r\n             \r\n         </div>\r\n"
                },
                {
                    "date": 1706691933730,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n     const [page, setPage] = useState(1);\r\n     const [textContent, setTextContent] = useState<TextContent | undefined>(undefined);\r\n \r\n     useEffect(() => {\r\n-        setTextContent({id:1,title:\"current api result\" , content: data.map((item:any) => item.title_en).join('. ')} as TextContent)\r\n+        setTextContent({id:1,title:\"current api result\" , content: data?.map((item:any) => item.title_en).join('. ')} as TextContent)\r\n     }, [page])\r\n \r\n     const [dataAll, setDataAll] = useState([] as any[]);\r\n     const { data, error, isLoading, isError,refetch } = useGetText(`text,${page}`);\r\n"
                },
                {
                    "date": 1706691955454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     const [textContent, setTextContent] = useState<TextContent | undefined>(undefined);\r\n \r\n     useEffect(() => {\r\n         setTextContent({id:1,title:\"current api result\" , content: data?.map((item:any) => item.title_en).join('. ')} as TextContent)\r\n-    }, [page])\r\n+    }, [data])\r\n \r\n     const [dataAll, setDataAll] = useState([] as any[]);\r\n     const { data, error, isLoading, isError,refetch } = useGetText(`text,${page}`);\r\n \r\n"
                },
                {
                    "date": 1706691966222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,14 +6,14 @@\n function GetText() {\r\n     \r\n     const [page, setPage] = useState(1);\r\n     const [textContent, setTextContent] = useState<TextContent | undefined>(undefined);\r\n-\r\n+    const [dataAll, setDataAll] = useState([] as any[]);\r\n     useEffect(() => {\r\n         setTextContent({id:1,title:\"current api result\" , content: data?.map((item:any) => item.title_en).join('. ')} as TextContent)\r\n-    }, [data])\r\n+    }, [dataAll])\r\n \r\n-    const [dataAll, setDataAll] = useState([] as any[]);\r\n+\r\n     const { data, error, isLoading, isError,refetch } = useGetText(`text,${page}`);\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1706691995553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,13 +7,9 @@\n     \r\n     const [page, setPage] = useState(1);\r\n     const [textContent, setTextContent] = useState<TextContent | undefined>(undefined);\r\n     const [dataAll, setDataAll] = useState([] as any[]);\r\n-    useEffect(() => {\r\n-        setTextContent({id:1,title:\"current api result\" , content: data?.map((item:any) => item.title_en).join('. ')} as TextContent)\r\n-    }, [dataAll])\r\n-\r\n-\r\n+  \r\n     const { data, error, isLoading, isError,refetch } = useGetText(`text,${page}`);\r\n \r\n \r\n \r\n@@ -21,9 +17,14 @@\n     const handleLoadMore = () => {\r\n         setPage(prevPage => prevPage + 1);\r\n         setDataAll((prev:any[])=>[...prev, ...data])\r\n     };\r\n+      useEffect(() => {\r\n+        setTextContent({id:1,title:\"current api result\" , content: data?.map((item:any) => item.title_en).join('. ')} as TextContent)\r\n+    }, [dataAll])\r\n \r\n+\r\n+\r\n     if (isLoading) {\r\n         return <div>Loading...</div>;\r\n     }\r\n \r\n"
                },
                {
                    "date": 1706692015609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n         setDataAll((prev:any[])=>[...prev, ...data])\r\n     };\r\n       useEffect(() => {\r\n         setTextContent({id:1,title:\"current api result\" , content: data?.map((item:any) => item.title_en).join('. ')} as TextContent)\r\n-    }, [dataAll])\r\n+    }, [])\r\n \r\n \r\n \r\n     if (isLoading) {\r\n"
                },
                {
                    "date": 1706692037940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n         setDataAll((prev:any[])=>[...prev, ...data])\r\n     };\r\n       useEffect(() => {\r\n         setTextContent({id:1,title:\"current api result\" , content: data?.map((item:any) => item.title_en).join('. ')} as TextContent)\r\n-    }, [])\r\n+    }, [dataAll])\r\n \r\n \r\n \r\n     if (isLoading) {\r\n"
                },
                {
                    "date": 1706692055203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n         setPage(prevPage => prevPage + 1);\r\n         setDataAll((prev:any[])=>[...prev, ...data])\r\n     };\r\n       useEffect(() => {\r\n+        console.log(\"loading\")\r\n         setTextContent({id:1,title:\"current api result\" , content: data?.map((item:any) => item.title_en).join('. ')} as TextContent)\r\n     }, [dataAll])\r\n \r\n \r\n"
                },
                {
                    "date": 1706692193402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,12 +17,12 @@\n     const handleLoadMore = () => {\r\n         setPage(prevPage => prevPage + 1);\r\n         setDataAll((prev:any[])=>[...prev, ...data])\r\n     };\r\n-      useEffect(() => {\r\n-        console.log(\"loading\")\r\n-        setTextContent({id:1,title:\"current api result\" , content: data?.map((item:any) => item.title_en).join('. ')} as TextContent)\r\n-    }, [dataAll])\r\n+    //   useEffect(() => {\r\n+    //     console.log(\"loading\")\r\n+    //     setTextContent({id:1,title:\"current api result\" , content: data?.map((item:any) => item.title_en).join('. ')} as TextContent)\r\n+    // }, [dataAll])\r\n \r\n \r\n \r\n     if (isLoading) {\r\n"
                },
                {
                    "date": 1706692318803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,12 +17,12 @@\n     const handleLoadMore = () => {\r\n         setPage(prevPage => prevPage + 1);\r\n         setDataAll((prev:any[])=>[...prev, ...data])\r\n     };\r\n-    //   useEffect(() => {\r\n-    //     console.log(\"loading\")\r\n-    //     setTextContent({id:1,title:\"current api result\" , content: data?.map((item:any) => item.title_en).join('. ')} as TextContent)\r\n-    // }, [dataAll])\r\n+      useEffect(() => {\r\n+        console.log(\"loading\")\r\n+        setTextContent({id:1,title:\"current api result\" , content: data?.map((item:any) => item.title_en).join('. ')} as TextContent)\r\n+    }, [dataAll])\r\n \r\n \r\n \r\n     if (isLoading) {\r\n"
                },
                {
                    "date": 1706692986034,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \r\n function GetText() {\r\n     \r\n     const [page, setPage] = useState(1);\r\n-    const [textContent, setTextContent] = useState<TextContent | undefined>(undefined);\r\n+    const [textContent, setTextContent] = useState<TextContent>({id:0,title:\"\",content:\"\"});\r\n     const [dataAll, setDataAll] = useState([] as any[]);\r\n   \r\n     const { data, error, isLoading, isError,refetch } = useGetText(`text,${page}`);\r\n \r\n@@ -20,8 +20,10 @@\n     };\r\n       useEffect(() => {\r\n         console.log(\"loading\")\r\n         setTextContent({id:1,title:\"current api result\" , content: data?.map((item:any) => item.title_en).join('. ')} as TextContent)\r\n+        const { result }  = useParseText(textContent)\r\n+\r\n     }, [dataAll])\r\n \r\n \r\n \r\n"
                },
                {
                    "date": 1706693027953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,13 +20,14 @@\n     };\r\n       useEffect(() => {\r\n         console.log(\"loading\")\r\n         setTextContent({id:1,title:\"current api result\" , content: data?.map((item:any) => item.title_en).join('. ')} as TextContent)\r\n-        const { result }  = useParseText(textContent)\r\n-\r\n+   \r\n     }, [dataAll])\r\n \r\n+    useEffect(() => {\r\n \r\n+     }, [textContent])\r\n \r\n     if (isLoading) {\r\n         return <div>Loading...</div>;\r\n     }\r\n"
                },
                {
                    "date": 1706693037030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,8 +24,9 @@\n    \r\n     }, [dataAll])\r\n \r\n     useEffect(() => {\r\n+        const  result  = useParseText(textContent)\r\n \r\n      }, [textContent])\r\n \r\n     if (isLoading) {\r\n"
                },
                {
                    "date": 1706693047648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n    \r\n     }, [dataAll])\r\n \r\n     useEffect(() => {\r\n-        const  result  = useParseText(textContent)\r\n+        useParseText(textContent)\r\n \r\n      }, [textContent])\r\n \r\n     if (isLoading) {\r\n"
                },
                {
                    "date": 1706693382785,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,17 +18,13 @@\n         setPage(prevPage => prevPage + 1);\r\n         setDataAll((prev:any[])=>[...prev, ...data])\r\n     };\r\n       useEffect(() => {\r\n-        console.log(\"loading\")\r\n         setTextContent({id:1,title:\"current api result\" , content: data?.map((item:any) => item.title_en).join('. ')} as TextContent)\r\n-   \r\n     }, [dataAll])\r\n \r\n-    useEffect(() => {\r\n-        useParseText(textContent)\r\n+    const parsedSentences = useParseText(textContent);\r\n \r\n-     }, [textContent])\r\n \r\n     if (isLoading) {\r\n         return <div>Loading...</div>;\r\n     }\r\n"
                },
                {
                    "date": 1706693421999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -50,8 +50,9 @@\n             {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n             {textContent?.content}\r\n+            {parsedSentences?}\r\n             <button onClick={handleLoadMore}>Load more</button>\r\n             <button onClick={()=>{refetch(); setDataAll((prev:any[])=>data)}}>Refresh Again</button>\r\n             \r\n         </div>\r\n"
                },
                {
                    "date": 1706693542650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,8 @@\n import React, { useEffect, useState } from 'react';\r\n import { useGetText } from './hooks/useGetText';\r\n import { useParseText } from './hooks/useParseText';\r\n-import { TextContent } from './DTO/dto';\r\n+import { Sentence, TextContent } from './DTO/dto';\r\n \r\n function GetText() {\r\n     \r\n     const [page, setPage] = useState(1);\r\n@@ -50,9 +50,11 @@\n             {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))}\r\n             {textContent?.content}\r\n-            {parsedSentences?}\r\n+            {parsedSentences && parsedSentences.map((item: Sentence, index: number) => (\r\n+                <div key={index}>{item.text}</div>\r\n+            ))}\r\n             <button onClick={handleLoadMore}>Load more</button>\r\n             <button onClick={()=>{refetch(); setDataAll((prev:any[])=>data)}}>Refresh Again</button>\r\n             \r\n         </div>\r\n"
                },
                {
                    "date": 1706693559438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,11 +46,11 @@\n     // }, [dataAll])\r\n \r\n     return (\r\n         <div>\r\n-            {dataAll && dataAll.map((item: any, index: number) => (\r\n+            {/* {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n-            ))}\r\n+            ))} */}\r\n             {textContent?.content}\r\n             {parsedSentences && parsedSentences.map((item: Sentence, index: number) => (\r\n                 <div key={index}>{item.text}</div>\r\n             ))}\r\n"
                },
                {
                    "date": 1706693747634,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,9 +49,9 @@\n         <div>\r\n             {/* {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n             ))} */}\r\n-            {textContent?.content}\r\n+            {/* {textContent?.content} */}\r\n             {parsedSentences && parsedSentences.map((item: Sentence, index: number) => (\r\n                 <div key={index}>{item.text}</div>\r\n             ))}\r\n             <button onClick={handleLoadMore}>Load more</button>\r\n"
                },
                {
                    "date": 1706693886245,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,38 @@\n import React, { useEffect, useState } from 'react';\r\n import { useGetText } from './hooks/useGetText';\r\n import { useParseText } from './hooks/useParseText';\r\n import { Sentence, TextContent } from './DTO/dto';\r\n+import { useAddSSMLTags } from './hooks/useAddSSMLTags';\r\n \r\n function GetText() {\r\n-    \r\n+\r\n     const [page, setPage] = useState(1);\r\n-    const [textContent, setTextContent] = useState<TextContent>({id:0,title:\"\",content:\"\"});\r\n+    const [textContent, setTextContent] = useState<TextContent>({ id: 0, title: \"\", content: \"\" });\r\n     const [dataAll, setDataAll] = useState([] as any[]);\r\n-  \r\n-    const { data, error, isLoading, isError,refetch } = useGetText(`text,${page}`);\r\n \r\n+    const { data, error, isLoading, isError, refetch } = useGetText(`text,${page}`);\r\n \r\n \r\n \r\n-    const handleLoadMore = () => {\r\n-        setPage(prevPage => prevPage + 1);\r\n-        setDataAll((prev:any[])=>[...prev, ...data])\r\n-    };\r\n-      useEffect(() => {\r\n-        setTextContent({id:1,title:\"current api result\" , content: data?.map((item:any) => item.title_en).join('. ')} as TextContent)\r\n+\r\n+\r\n+    useEffect(() => {\r\n+        setTextContent({ id: 1, title: \"current api result\", content: data?.map((item: any) => item.title_en).join('. ') } as TextContent)\r\n     }, [dataAll])\r\n \r\n     const parsedSentences = useParseText(textContent);\r\n \r\n \r\n+    const ssmlTags = [\r\n+        { name: \"break\", value: \"500ms\" },\r\n+    ];\r\n+    const sentencesWithSSML = useAddSSMLTags(parsedSentences, ssmlTags);\r\n+    const handleLoadMore = () => {\r\n+        setPage(prevPage => prevPage + 1);\r\n+        setDataAll((prev: any[]) => [...prev, ...data])\r\n+    };\r\n+\r\n     if (isLoading) {\r\n         return <div>Loading...</div>;\r\n     }\r\n \r\n@@ -54,10 +61,10 @@\n             {parsedSentences && parsedSentences.map((item: Sentence, index: number) => (\r\n                 <div key={index}>{item.text}</div>\r\n             ))}\r\n             <button onClick={handleLoadMore}>Load more</button>\r\n-            <button onClick={()=>{refetch(); setDataAll((prev:any[])=>data)}}>Refresh Again</button>\r\n-            \r\n+            <button onClick={() => { refetch(); setDataAll((prev: any[]) => data) }}>Refresh Again</button>\r\n+\r\n         </div>\r\n     );\r\n }\r\n \r\n"
                },
                {
                    "date": 1706693900806,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,12 +11,8 @@\n     const [dataAll, setDataAll] = useState([] as any[]);\r\n \r\n     const { data, error, isLoading, isError, refetch } = useGetText(`text,${page}`);\r\n \r\n-\r\n-\r\n-\r\n-\r\n     useEffect(() => {\r\n         setTextContent({ id: 1, title: \"current api result\", content: data?.map((item: any) => item.title_en).join('. ') } as TextContent)\r\n     }, [dataAll])\r\n \r\n@@ -26,8 +22,9 @@\n     const ssmlTags = [\r\n         { name: \"break\", value: \"500ms\" },\r\n     ];\r\n     const sentencesWithSSML = useAddSSMLTags(parsedSentences, ssmlTags);\r\n+\r\n     const handleLoadMore = () => {\r\n         setPage(prevPage => prevPage + 1);\r\n         setDataAll((prev: any[]) => [...prev, ...data])\r\n     };\r\n"
                },
                {
                    "date": 1706693961178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,21 +35,10 @@\n \r\n     if (isError) {\r\n         return <div>Error: {error?.message}</div>;\r\n     }\r\n-    // useEffect(() => {\r\n-    //     // const mapped= dataAll.map((item:any) => {\r\n-    //     //     return {     \r\n-    //     //       id: item.id,\r\n-    //     //       title: item.title_en,\r\n-    //     //       content:item.title_en,\r\n-    //     //     } as TextContent;\r\n-    //     //   });\r\n-    //     const content:TextContent={id:1,title:\"current api result\" , content: data.map((item:any) => item.title_en).join('. ')}\r\n-    //     setTextContent(content)\r\n-    //     //const { result }=useParseText(mapped)\r\n-    // }, [dataAll])\r\n \r\n+\r\n     return (\r\n         <div>\r\n             {/* {dataAll && dataAll.map((item: any, index: number) => (\r\n                 <div key={index}>{item.title_en}</div>\r\n@@ -57,8 +46,11 @@\n             {/* {textContent?.content} */}\r\n             {parsedSentences && parsedSentences.map((item: Sentence, index: number) => (\r\n                 <div key={index}>{item.text}</div>\r\n             ))}\r\n+            {sentencesWithSSML && sentencesWithSSML.map((item: string, index: number) => (\r\n+                <div key={index}>{item}</div>\r\n+            ))}\r\n             <button onClick={handleLoadMore}>Load more</button>\r\n             <button onClick={() => { refetch(); setDataAll((prev: any[]) => data) }}>Refresh Again</button>\r\n \r\n         </div>\r\n"
                }
            ],
            "date": 1706600584208,
            "name": "Commit-0",
            "content": "import React from 'react'\r\n\r\nfunction GetText() {\r\n  return (\r\n    <>GetText</>\r\n  )\r\n}\r\n\r\nexport default GetText"
        }
    ]
}