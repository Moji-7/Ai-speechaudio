{
    "sourceFile": "src/components/flow/12.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1707036843378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1707038528585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,45 +1,43 @@\n-// part 17\r\n-// SVGWidget.js\r\n // import the necessary modules\r\n import * as React from 'react';\r\n-import { PortWidget } from '@projectstorm/react-diagrams';\r\n+import { DiagramEngine, PortWidget } from '@projectstorm/react-diagrams-core';\r\n+import { TSCustomNodeModel } from './TSCustomNodeModel';\r\n+import { DefaultPortModel } from '@projectstorm/react-diagrams';\r\n \r\n-// define the SVGWidget component\r\n-export class SVGWidget extends React.Component {\r\n-    constructor(props) {\r\n-        // initialize the SVGWidget with the given props\r\n+// define the custom node widget props interface\r\n+export interface TSCustomNodeWidgetProps {\r\n+    node: TSCustomNodeModel;\r\n+    engine: DiagramEngine;\r\n+}\r\n+\r\n+// define the custom node widget state interface\r\n+export interface TSCustomNodeWidgetState { }\r\n+\r\n+// define the custom node widget class\r\n+export class TSCustomNodeWidget extends React.Component<TSCustomNodeWidgetProps, TSCustomNodeWidgetState> {\r\n+    // constructor method\r\n+    constructor(props: TSCustomNodeWidgetProps) {\r\n+        // call the super constructor with the props\r\n         super(props);\r\n+        // initialize the state\r\n         this.state = {};\r\n     }\r\n \r\n-    // render the SVGWidget component\r\n+    // render method\r\n     render() {\r\n-        // get the engine, node, and size from the props\r\n-        const { engine, node, size } = this.props;\r\n-\r\n-        // get the id, position, and file path from the node options\r\n-        const { id, position, filePath } = node.getOptions();\r\n-\r\n-        // get the port from the node\r\n-        const port = node.getPort('svg-port');\r\n-\r\n-        // return the JSX element for the SVGWidget component\r\n+        // return a JSX element with the custom node widget\r\n         return (\r\n-            <div\r\n-                className={'svg-node'}\r\n-                style={{\r\n-                    position: 'absolute',\r\n-                    left: position.x,\r\n-                    top: position.y\r\n-                }}\r\n-            >\r\n-                <svg\r\n-                    width={size}\r\n-                    height={size}\r\n-                    dangerouslySetInnerHTML={{ __html: filePath }}\r\n-                />\r\n-                <PortWidget engine={engine} port={port} />\r\n+            <div className={this.props.node.cssClass || 'custom-node'}> \r\n+                {/* <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('IN') || new DefaultPortModel({ in: true, name: 'IN' })}>\r\n+                    <div className=\"circle-port\" />\r\n+                </PortWidget>\r\n+                <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('OUT') || new DefaultPortModel({ in: false, name: 'OUT' })}>\r\n+                    <div className=\"circle-port\" />\r\n+                </PortWidget> */}\r\n+                <div className=\"custom-node-color\" style={{ backgroundColor: this.props.node.color }}>\r\n+                    {this.props.node.value}\r\n+                </div>\r\n             </div>\r\n         );\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1707038547682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,13 @@\n // import the necessary modules\r\n import * as React from 'react';\r\n import { DiagramEngine, PortWidget } from '@projectstorm/react-diagrams-core';\r\n-import { TSCustomNodeModel } from './TSCustomNodeModel';\r\n+import { TSCustomNodeModel2 } from './10';\r\n import { DefaultPortModel } from '@projectstorm/react-diagrams';\r\n \r\n // define the custom node widget props interface\r\n export interface TSCustomNodeWidgetProps {\r\n-    node: TSCustomNodeModel;\r\n+    node: TSCustomNodeModel2;\r\n     engine: DiagramEngine;\r\n }\r\n \r\n // define the custom node widget state interface\r\n"
                },
                {
                    "date": 1707038578333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n // define the custom node widget state interface\r\n export interface TSCustomNodeWidgetState { }\r\n \r\n // define the custom node widget class\r\n-export class TSCustomNodeWidget extends React.Component<TSCustomNodeWidgetProps, TSCustomNodeWidgetState> {\r\n+export class TSCustomNodeWidget2 extends React.Component<TSCustomNodeWidgetProps, TSCustomNodeWidgetState> {\r\n     // constructor method\r\n     constructor(props: TSCustomNodeWidgetProps) {\r\n         // call the super constructor with the props\r\n         super(props);\r\n@@ -26,9 +26,9 @@\n     // render method\r\n     render() {\r\n         // return a JSX element with the custom node widget\r\n         return (\r\n-            <div className={this.props.node.cssClass || 'custom-node'}> \r\n+            <div className={this.props.node.cssClass || 'custom-node-2'}> \r\n                 {/* <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('IN') || new DefaultPortModel({ in: true, name: 'IN' })}>\r\n                     <div className=\"circle-port\" />\r\n                 </PortWidget>\r\n                 <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('OUT') || new DefaultPortModel({ in: false, name: 'OUT' })}>\r\n"
                },
                {
                    "date": 1707039338588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,12 +32,12 @@\n                     <div className=\"circle-port\" />\r\n                 </PortWidget>\r\n                 <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('OUT') || new DefaultPortModel({ in: false, name: 'OUT' })}>\r\n                     <div className=\"circle-port\" />\r\n-                </PortWidget> */}\r\n+                </PortWidget> \r\n                 <div className=\"custom-node-color\" style={{ backgroundColor: this.props.node.color }}>\r\n                     {this.props.node.value}\r\n-                </div>\r\n+                </div>*/}\r\n             </div>\r\n         );\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1707043549288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     // render method\r\n     render() {\r\n         // return a JSX element with the custom node widget\r\n         return (\r\n-            <div className={this.props.node.cssClass || 'custom-node-2'}> \r\n+            <div className={`svg-container ${this.props.node.cssClass}`|| 'custom-node-2'}></div>\r\n                 {/* <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('IN') || new DefaultPortModel({ in: true, name: 'IN' })}>\r\n                     <div className=\"circle-port\" />\r\n                 </PortWidget>\r\n                 <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('OUT') || new DefaultPortModel({ in: false, name: 'OUT' })}>\r\n"
                },
                {
                    "date": 1707043579116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     // render method\r\n     render() {\r\n         // return a JSX element with the custom node widget\r\n         return (\r\n-            <div className={`svg-container ${this.props.node.cssClass}`|| 'custom-node-2'}></div>\r\n+            <div className={`svg-container ${this.props.node.cssClass}|| 'custom-node-2'`}></div>\r\n                 {/* <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('IN') || new DefaultPortModel({ in: true, name: 'IN' })}>\r\n                     <div className=\"circle-port\" />\r\n                 </PortWidget>\r\n                 <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('OUT') || new DefaultPortModel({ in: false, name: 'OUT' })}>\r\n"
                },
                {
                    "date": 1707043698414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     // render method\r\n     render() {\r\n         // return a JSX element with the custom node widget\r\n         return (\r\n-            <div className={`svg-container ${this.props.node.cssClass}|| 'custom-node-2'`}></div>\r\n+            <div className={`svg-container ${this.props.node.cssClass}|| 'custom-node-2'`}>\r\n                 {/* <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('IN') || new DefaultPortModel({ in: true, name: 'IN' })}>\r\n                     <div className=\"circle-port\" />\r\n                 </PortWidget>\r\n                 <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('OUT') || new DefaultPortModel({ in: false, name: 'OUT' })}>\r\n"
                },
                {
                    "date": 1707044102508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,10 @@\n     // render method\r\n     render() {\r\n         // return a JSX element with the custom node widget\r\n         return (\r\n-            <div className={`svg-container ${this.props.node.cssClass}|| 'custom-node-2'`}>\r\n+            <div className={`svg-container`}>\r\n+            <div className={`${this.props.node.cssClass}|| 'custom-node-2'`}>\r\n                 {/* <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('IN') || new DefaultPortModel({ in: true, name: 'IN' })}>\r\n                     <div className=\"circle-port\" />\r\n                 </PortWidget>\r\n                 <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('OUT') || new DefaultPortModel({ in: false, name: 'OUT' })}>\r\n@@ -37,7 +38,8 @@\n                 <div className=\"custom-node-color\" style={{ backgroundColor: this.props.node.color }}>\r\n                     {this.props.node.value}\r\n                 </div>*/}\r\n             </div>\r\n+            </div>\r\n         );\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1707044148946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     // render method\r\n     render() {\r\n         // return a JSX element with the custom node widget\r\n         return (\r\n-            <div className={`svg-container`}>\r\n+            <div className='svg-container'>\r\n             <div className={`${this.props.node.cssClass}|| 'custom-node-2'`}>\r\n                 {/* <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('IN') || new DefaultPortModel({ in: true, name: 'IN' })}>\r\n                     <div className=\"circle-port\" />\r\n                 </PortWidget>\r\n"
                },
                {
                    "date": 1707044379351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,10 +26,9 @@\n     // render method\r\n     render() {\r\n         // return a JSX element with the custom node widget\r\n         return (\r\n-            <div className='svg-container'>\r\n-            <div className={`${this.props.node.cssClass}|| 'custom-node-2'`}>\r\n+            <div className={`svg-container ${this.props.node.cssClass}|| 'custom-node-2'`}>\r\n                 {/* <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('IN') || new DefaultPortModel({ in: true, name: 'IN' })}>\r\n                     <div className=\"circle-port\" />\r\n                 </PortWidget>\r\n                 <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('OUT') || new DefaultPortModel({ in: false, name: 'OUT' })}>\r\n@@ -38,8 +37,7 @@\n                 <div className=\"custom-node-color\" style={{ backgroundColor: this.props.node.color }}>\r\n                     {this.props.node.value}\r\n                 </div>*/}\r\n             </div>\r\n-            </div>\r\n         );\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1707044392874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     // render method\r\n     render() {\r\n         // return a JSX element with the custom node widget\r\n         return (\r\n-            <div className={`svg-container ${this.props.node.cssClass}|| 'custom-node-2'`}>\r\n+            <div className={` ${this.props.node.cssClass}|| 'custom-node-2'`}>\r\n                 {/* <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('IN') || new DefaultPortModel({ in: true, name: 'IN' })}>\r\n                     <div className=\"circle-port\" />\r\n                 </PortWidget>\r\n                 <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('OUT') || new DefaultPortModel({ in: false, name: 'OUT' })}>\r\n"
                },
                {
                    "date": 1707044455954,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     // render method\r\n     render() {\r\n         // return a JSX element with the custom node widget\r\n         return (\r\n-            <div className={` ${this.props.node.cssClass}|| 'custom-node-2'`}>\r\n+            <div className={`'svg-container' ${this.props.node.cssClass}|| 'custom-node-2'`}>\r\n                 {/* <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('IN') || new DefaultPortModel({ in: true, name: 'IN' })}>\r\n                     <div className=\"circle-port\" />\r\n                 </PortWidget>\r\n                 <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('OUT') || new DefaultPortModel({ in: false, name: 'OUT' })}>\r\n"
                },
                {
                    "date": 1707046035169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n     // render method\r\n     render() {\r\n         // return a JSX element with the custom node widget\r\n         return (\r\n-            <div className={`'svg-container' ${this.props.node.cssClass}|| 'custom-node-2'`}>\r\n+            <div className={` ${this.props.node.cssClass}|| 'custom-node-2'`}>\r\n                 {/* <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('IN') || new DefaultPortModel({ in: true, name: 'IN' })}>\r\n                     <div className=\"circle-port\" />\r\n                 </PortWidget>\r\n                 <PortWidget engine={this.props.engine} port={this.props.node.getPort?.('OUT') || new DefaultPortModel({ in: false, name: 'OUT' })}>\r\n"
                }
            ],
            "date": 1707036843378,
            "name": "Commit-0",
            "content": "// part 17\r\n// SVGWidget.js\r\n// import the necessary modules\r\nimport * as React from 'react';\r\nimport { PortWidget } from '@projectstorm/react-diagrams';\r\n\r\n// define the SVGWidget component\r\nexport class SVGWidget extends React.Component {\r\n    constructor(props) {\r\n        // initialize the SVGWidget with the given props\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    // render the SVGWidget component\r\n    render() {\r\n        // get the engine, node, and size from the props\r\n        const { engine, node, size } = this.props;\r\n\r\n        // get the id, position, and file path from the node options\r\n        const { id, position, filePath } = node.getOptions();\r\n\r\n        // get the port from the node\r\n        const port = node.getPort('svg-port');\r\n\r\n        // return the JSX element for the SVGWidget component\r\n        return (\r\n            <div\r\n                className={'svg-node'}\r\n                style={{\r\n                    position: 'absolute',\r\n                    left: position.x,\r\n                    top: position.y\r\n                }}\r\n            >\r\n                <svg\r\n                    width={size}\r\n                    height={size}\r\n                    dangerouslySetInnerHTML={{ __html: filePath }}\r\n                />\r\n                <PortWidget engine={engine} port={port} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"
        }
    ]
}